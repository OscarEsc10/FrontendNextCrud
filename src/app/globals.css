/* Import Tailwind CSS base styles */
@import "tailwindcss";

/* Root CSS variables for background and foreground colors */
:root {
  --background: #ffffff;
  --foreground: #171717;
}

/* Additional root variables for color and font families */
:root inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

/* Dark mode color overrides */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Base body styles using CSS variables */
body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Custom spin animation for loading spinners */
@keyframes spinCustom {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(720deg);
  }
}

/* Utility class for custom spin animation */
.animate-spinCustom {
  animation: spinCustom 2s linear infinite;
}

/* Glow animation for text effects */
@keyframes glow {
  0%, 100% {
    text-shadow: 0 0 4px #3b82f6, 0 0 8px #3b82f6;
  }
  50% {
    text-shadow: 0 0 12px #60a5fa, 0 0 20px #60a5fa;
  }
}

/* Utility class for glowing text */
.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

/* Fade-in animation for elements */
@keyframes fadeIn {
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}

/* Utility class for fade-in animation (0.8s) */
.animate-fadeIn {
  animation: fadeIn 0.8s ease-out;
}

/* Alternative fade-in animation (shorter duration, forwards) */
@keyframes fade-in {
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}
.animate-fade-in {
  animation: fade-in 0.3s ease-out forwards;
}

/* Alert fade-in animation for notifications */
.animate-alert {
  animation: fade-alert 1s ease-out;
}

/* Keyframes for alert fade-in effect */
@keyframes fade-alert {
  from { opacity: 0; transform: translateY(-5px); }
  to { opacity: 1; transform: translateY(0); }
}


.animate-alert-success-delete{
  animation: fade-alert-delete 1s ease-out;
}

/* Keyframes for alert fade-in effect */
@keyframes fade-alert-delete {
  from { opacity: 0; transform: translateY(-5px); }
  to { opacity: 1; transform: translateY(0); }
}

/*
USAGE VERIFICATION:
- .animate-spinCustom is used for loading spinners in your React components.
- .animate-fadeIn and .animate-fade-in are used for modal and content transitions.
- .animate-alert is used for alert/notification fade-in effects.
- .animate-glow is available for glowing text, but not currently referenced in your provided React code.
*/